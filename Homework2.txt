The aim of this exercise is to write Matrix transposition in MapReduce.
If our input matrix is given by :

| ti | to | tu |
| bi | bo | bu |

The output will be :

| ti | bi |
| to | bo |
| tu | bu |

1) Map phase :
The map function takes a row as input and it generates a couple of key/value
such that the key is the row index of the element in the matrix and the value
is the element itself.
After the map we will have :
(0 , ti)
(1 , to)
(2 , tu)
(0 , bi)
(1 , bo)
(2 , bu)

2) Shuffle and Sort phase :
in this step we group the obtained outputs of the map phase according to the key.

{0 , [(0 , ti) , (0 , bi)]}
{1 , [(1 , to) , (1 , bo)]}
{2 , [(2 , tu) , (2 , bu)]}

3) Reduce Phase :
(0 , [ti, bi])
(1 , [to, bo])
(2 , [tu, bu])

Pseudo-code :

map(index_row , value_row){
    counter = 0
    for elem in value_row {
      k = counter
      v = elem
      counter ++
    }
    return (k , v)
}

reduce(k, list){
    result = []
    for elem in list {
      result.add(elem[1])
    }
    return (k, result)
}
